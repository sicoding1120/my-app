// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  STUDENT
  MENTOR
  NONROLE
}

enum Nilai {
  A
  B
  C
  D
}

model User {
  id        String   @id @unique @default(uuid())
  name      String?
  password  String   @unique
  classId   Int
  Profile   Profile? @relation()
  profileId String   @unique @default(uuid())
  blog      Blog[]
  mentor    Mentor?
  Class     Class[]  @relation()
}

model Profile {
  id_credential String   @id @unique @default(uuid())
  email         String   @unique
  role          UserRole @default(STUDENT)
  user          User?    @relation(fields: [id_credential], references: [id])
}

model Blog {
  id       String   @id @unique @default(uuid())
  title    String
  subTitle String
  content  String
  author   String
  date     DateTime
  kategori String[]
  user     User?    @relation(fields: [userId], references: [id])
  userId   String   @default(uuid())
  views    Int
}

model Class {
  id_credential    String      @id @unique @default(uuid())
  title            String
  price            Int
  isDiscount       Boolean
  DiscountPrice    Int
  difficultyLevel  String
  lesson           Int
  mentorixPoin     Int
  time             Int
  progress         Int
  authorTeams      String
  aboutClass       String
  StepClass        String[]
  materiListClass  MateriList[]
  prepareToLearn   String[]
  nilai            Nilai?      @default(D)
  isCertivicate    Boolean
  urlCertivication String
  User             User[]
}

model MateriList {
  id       Int    @unique
  title    String
  Progress Int
  class    Class? @relation(fields: [classId], references: [id_credential])
  classId  String
}

model Mentor {
  id            String   @id @unique @default(uuid())
  takeOffice_at DateTime
  expired_at    DateTime
  img           String
  user          User     @relation(fields: [userId], references: [id])
  userId        String   @unique @default(uuid())
}
