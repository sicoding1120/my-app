// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  STUDENT
  MENTOR
  NONROLE
}

model User {
  id       Int      @id @default(autoincrement())
  name     String?
  password String   @unique
  Profile  Profile?
  blog     Blog[]
  mentor   Mentor?
}

model Profile {
  email         String   @unique
  id_credential Int      @unique
  role          UserRole @default(NONROLE)
  user          User?    @relation(fields: [id_credential], references: [id])
}

model Blog {
  id       Int      @id @unique @default(autoincrement())
  title    String
  subTitle String
  content  String
  author   String
  date     DateTime
  kategori String[]
  user     User?    @relation(fields: [userId], references: [id])
  userId   Int
  views    Int
}
model Class {
  id_credential Int          @unique
  title         String
  Kos           String
  lesson        Int
  time          Int
  headerTitle   String
  desc_cover    String
  progress      Int
  desc          String
  kategori      String[]
  isDiscount    Boolean
  url           String       @unique
  aboutClass    String[]
  isCertivicate Boolean
  classDetail   ClassDetail?
}

model ClassDetail {
  material Int
  point    Int
  mentor   Mentor?
  class    Class?  @relation(fields: [class_id], references: [id_credential])
  class_id Int     @unique
}

model Mentor {
  id            String       @unique
  takeOffice_at DateTime
  expired_at    DateTime
  img           String
  user          User         @relation(fields: [userId], references: [id])
  userId        Int          @unique
  classDetail   ClassDetail? @relation(fields: [class_id], references: [class_id])
  class_id      Int          @unique
}
